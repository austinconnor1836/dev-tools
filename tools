#!/bin/bash

# Initialize variables
COPY_BRANCH=false
DELETE_ALL_BRANCHES=false

# Function to display help message
show_help() {
  echo "Usage: $0 [OPTIONS] COMMAND"
  echo ""
  echo "Commands:"
  echo "  copy-branch                        Create copy of current git branch"
  echo "  delete-all-branches                Delete all local git branches except for those specified"
  echo ""
  echo "Examples:"
  echo "  $0 copy-branch"
  echo "  $0 delete-all-branches test-branch-1 test-branch-2"
}

# Check if no arguments are provided
if [ "$#" -eq 0 ]; then
  show_help
  exit 0
fi

# Parse command-line options
while [[ "$#" -gt 0 ]]; do
  case $1 in
    copy-branch)
      COPY_BRANCH=true
      ;;
    delete-all-branches)
      DELETE_ALL_BRANCHES=true
      shift
      branches_to_keep=("$@")
      break
      ;;
    *)
      echo "Unknown parameter passed: $1" >&2
      show_help
      exit 1
      ;;
  esac
  shift
done

copy_branch() {
  # Get the current branch name
  current_branch=$(git rev-parse --abbrev-ref HEAD)

  # Define the new branch name, appending "-copy" to the current branch
  new_branch="${current_branch}-copy"

  # Create and switch to the new branch
  git checkout -b "$new_branch"

  # Confirm the branch switch
  echo "Switched to new branch: $new_branch"
}

# Deletes all local git branches except for the ones passed as arguments
# and the current branch
delete_all_branches() {
  # Get the current branch name
  current_branch=$(git rev-parse --abbrev-ref HEAD)

  # List all local branches
  all_branches=$(git branch --format="%(refname:short)")

  for branch in $all_branches; do
    # Skip the current branch and branches to keep
    if [[ "$branch" != "$current_branch" ]] && [[ ! " ${branches_to_keep[@]} " =~ " ${branch} " ]]; then
      echo "Deleting branch: $branch"
      git branch -D "$branch"
    else
      echo "Keeping branch: $branch"
    fi
  done
}

if [ "$COPY_BRANCH" = true ]; then
  copy_branch 
  COPY_BRANCH=false
  exit 0
fi

if [ "$DELETE_ALL_BRANCHES" = true ]; then
  delete_all_branches "${branches_to_keep[@]}"
  DELETE_ALL_BRANCHES=false
  exit 0
fi